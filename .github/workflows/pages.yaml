name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

# Common env for GH Pages subpath deployments
env:
  NODE_VERSION: 20
  PUBLIC_URL: "${{ format('https://{0}.github.io/{1}/', github.repository_owner, github.event.repository.name) }}"
  BASE_PATH: "${{ format('/{0}/', github.event.repository.name) }}"
  NEXT_PUBLIC_BASE_PATH: "${{ format('/{0}/', github.event.repository.name) }}"
  VITE_BASE: "${{ format('/{0}/', github.event.repository.name) }}"
  GATSBY_PATH_PREFIX: "${{ format('/{0}/', github.event.repository.name) }}"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
          cache: 'npm'

      - name: Show Pages URL
        run: |
          echo "PUBLIC_URL=$PUBLIC_URL"
          echo "BASE_PATH=$BASE_PATH"

      - name: Install dependencies (if Node project)
        run: |
          if [ -f package.json ]; then \
            if [ -f pnpm-lock.yaml ]; then corepack enable; pnpm install --frozen-lockfile; \
            elif [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
            else npm ci; fi; \
          else \
            echo "No package.json found; skipping install"; \
          fi

      - name: Build (if script exists)
        env:
          # Ensure envs are present to the build step
          PUBLIC_URL: "${{ env.PUBLIC_URL }}"
          BASE_PATH: "${{ env.BASE_PATH }}"
          NEXT_PUBLIC_BASE_PATH: "${{ env.NEXT_PUBLIC_BASE_PATH }}"
          VITE_BASE: "${{ env.VITE_BASE }}"
          GATSBY_PATH_PREFIX: "${{ env.GATSBY_PATH_PREFIX }}"
        run: |
          if [ -f package.json ]; then \
            if [ -f pnpm-lock.yaml ]; then pnpm run -s build || true; \
            elif [ -f yarn.lock ]; then yarn build || true; \
            else npm run -s build || true; fi; \
          else \
            echo "No package.json found; skipping build"; \
          fi

      - name: Detect artifact directory
        id: artifact
        run: |
          for d in dist build out public .; do \
            if [ -d "$d" ]; then echo "dir=$d" >> "$GITHUB_OUTPUT"; break; fi; \
          done

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.artifact.outputs.dir }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
